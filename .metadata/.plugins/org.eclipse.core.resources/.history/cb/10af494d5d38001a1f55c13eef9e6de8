package com.app.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.app.dao.IUserDao;
import com.app.pojos.User;

@CrossOrigin("*")
@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	IUserDao Iuserdao;
	
	@Autowired
	private UserService service;
	

	@Autowired
	private JavaMailSender mailSender;
	@GetMapping("/value")
	public List<User> getAllUser(){

	return Iuserdao.allUser();

	}

	
	@PostMapping("/register")
	public Integer register(@RequestBody User user)
	{
		System.out.println(user);
		return Iuserdao.registerUser(user);
	}
	
	@PostMapping("/login")
	public User login(@RequestBody User user)
	{
		System.out.println("inside login");
		System.out.println(user);
		return Iuserdao.login(user);
	}
	@GetMapping("/logout")
	public String logout(HttpSession hs)
	{
	 hs.invalidate();
	 return "redirect:home";
	}
	@GetMapping("/forgot")
	public String showForgotPassword()
	{
		return "forgotPassword";
	}
	
	@PostMapping("/forgot")
	public String processForgotPassword(HttpServletRequest request,Model map,HttpSession hs)
	{
		String em = request.getParameter("email");
		User user;
		try
		{
			user = service.findByEmail(em);
			hs.setAttribute("user", user);
			if(user !=null)
			{
				int otp = service.generateOtp();
				hs.setAttribute("OTP", otp);
				String msg="Your one time password for forgot password is = "+otp;
				SimpleMailMessage mailMessage = new SimpleMailMessage();
				mailMessage.setTo(user.getEmail());
				mailMessage.setSubject("One Time Password");
				mailMessage.setText(msg);
				try
				{
					mailSender.send(mailMessage);
				}
				catch (MailException e) 
				{
					System.out.println("inside mail exception");
					e.printStackTrace();
				}
				return "otp";
			}
		} catch (NoResultException e) 
		{
			map.addAttribute("msg", "Please enter valid email address");
			e.printStackTrace();
		}
		return "forgotPassword";

	}
	
	@PostMapping("/confirmOtp")
	public String confirmOtp(HttpServletRequest request,HttpSession hs)
	{
		int otp = (int) hs.getAttribute("OTP");
		int formOtp = Integer.parseInt(request.getParameter("otp"));
		if(otp == formOtp)
		{
			User user = (User) hs.getAttribute("user");
			String role = user.getUserRole().getRole();
			if(role.equals("BUYER"))
				return "buyer/dashboard";
			else if(role.equals("SELLER"))
				return "seller/dashboard";
			else 
				return "admin/dashboard";
		}
		else
			hs.setAttribute("msg","Enter valid one time password");
			return "otp";
	}
	
	
	@GetMapping("/changepass")
	public String showChangePasswordForm()
	{
		return "changePassword";
	}
	
	@PostMapping("/changepass")
	public String processChangePasswordForm(@RequestParam int id,HttpServletRequest request,HttpSession hs)
	{
		User userPojo = (User) hs.getAttribute("validUser");
		User user = service.getUserById(id);
		String pass =  request.getParameter("confirmPass");
		user.setPassword(pass);
		service.updatePassword(user);
		return "redirect:/dashboard";
	}
	
	
	}
	
	
}

}
